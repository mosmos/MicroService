apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "coredatastore.fullname" . }}-redis
  labels:
    app.kubernetes.io/name: {{ include "coredatastore.name" . }}-redis
    helm.sh/chart: {{ include "coredatastore.chart" . }}-redis
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "coredatastore.name" . }}-redis
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "coredatastore.name" . }}-redis
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 0
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.redis.image}}:{{ .Values.redis.tag }}
          ports:
            - containerPort: 6379
          healthcheck:
            test:  {{ .Values.redis.healthcheck.test }}
          volumeMounts:
            - name: redis-data-volume
              mountPath: "/var/lib/redis"
      volumes:
        - name: redis-data-volume
          {{- if .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s" ( include "coredatastore.fullname" .) "redis") }}
          {{- else }}
          emptyDir: {}
          {{- end }}
