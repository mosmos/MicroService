apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "microservice-stack.fullname" . }}-alertmanager
  labels:
    app.kubernetes.io/name: alertmanager
data:
  config.yml: |
    global:
      # The smarthost and SMTP sender used for mail notifications.
      smtp_smarthost: '{{ template "microservice-stack.fullname" . }}-mailhog:1025'
      smtp_from: {{ .Values.alertmanager.mailhog.smtp_from }}
      smtp_require_tls: {{ .Values.alertmanager.mailhog.smtp_tls }}

    # The root route on which each incoming alert enters.
    route:
      # The root route must not have any matchers as it is the entry point for
        # all alerts. It needs to have a receiver configured so alerts that do not
      # match any of the sub-routes are sent to someone.
      receiver: {{ .Values.alertmanager.mailhog.receiver }}

      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first
      # notification.
      group_wait: 30s

    receivers:
    - name: {{ .Values.alertmanager.mailhog.receiver }}
      email_configs:
      - to: {{ .Values.alertmanager.mailhog.receiverEmail }}
        send_resolved: true
